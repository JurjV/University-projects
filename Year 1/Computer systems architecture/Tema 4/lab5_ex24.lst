     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      
    14                                      ;Two byte strings A and B are given. Obtain the string R by concatenating the elements of B in reverse order and the elements of A in reverse order.
    15                                      
    16 00000000 0102030405                  a db 1,2,3,4,5
    17                                      la equ $-a
    18 00000005 060708090A                  b db 6,7,8,9,10
    19                                      lb equ $-b,
    20                                      ld equ la+lb
    21 0000000A 00<rept>                    d times ld db 0 ; rezerves ld bytes for concatenating the two strings
    22 00000014 02                          s db 2
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          
    28 00000000 B90A000000                      mov ecx,ld ; initialise ecx with ld and esi with 0
    29 00000005 BE00000000                      mov esi,0
    30 0000000A E30F                            jecxz Final   ; if there are no elements on the string we end the program
    31                                          Concatenation:
    32 0000000C 8A81[FFFFFFFF]                      mov al,[a+ecx-1]   ; we compute the list a+b from the end
    33 00000012 8886[0A000000]                      mov [d+esi],al     ; we mov the current element in d
    34 00000018 46                                  inc esi
    35 00000019 E2F1                            loop Concatenation
    36                                          Final:
    37                                          ; exit(0)
    38 0000001B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    39 0000001D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
