     1                                  
     2                                  ;A text file is given. Read the content of the file, count the number of vowels and display the result on the screen. The name of text file is defined in the data segment.
     3                                  bits 32 ; assembling for the 32 bits architecture
     4                                  
     5                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     6                                  global start        
     7                                  
     8                                  ; declare external functions needed by our program
     9                                  extern exit,printf,fread,fopen,fclose               ; tell nasm that exit exists even if we won't be defining it
    10                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                  import printf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                  import fread msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    13                                  import fopen msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    14                                  import fclose msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    15                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    16                                  
    17                                  ; our data is declared here (the variables needed by our program)
    18                                  segment data use32 class=data
    19 00000000 66696C652E74787400          file_name db "file.txt",0
    20 00000009 7200                        read_mode db "r",0
    21 0000000B FFFFFFFF                    file_descriptor dd -1
    22 0000000F 00000000                    characters_read dd 0
    23                                      len equ 100
    24 00000013 <res 00000064>              text resb len
    25 00000077 6165696F754145494F-         search_characters db "aeiouAEIOU",0
    25 00000080 5500               
    26                                      char_start equ $ - search_characters
    27 00000082 00000000                    nr_of_vowels dd 0
    28 00000086 546865726520776572-         write_format db "There were %d vowels in the file",0
    28 0000008F 6520256420766F7765-
    28 00000098 6C7320696E20746865-
    28 000000A1 2066696C6500       
    29                                  
    30                                      
    31                                  
    32                                  ; our code starts here
    33                                  segment code use32 class=code
    34                                      start:
    35 00000000 68[09000000]                    push dword read_mode
    36 00000005 68[00000000]                    push dword file_name
    37 0000000A FF15[00000000]                  call [fopen]
    38 00000010 83C408                          add esp,4*2
    39                                          
    40 00000013 83F800                          cmp eax,0
    41 00000016 7450                            je Final
    42 00000018 A3[0B000000]                    mov [file_descriptor],eax
    43                                          Program:
    44 0000001D FF35[0B000000]                      push dword [file_descriptor]
    45 00000023 6A64                                push dword len
    46 00000025 6A01                                push dword 1
    47 00000027 68[13000000]                        push dword text
    48 0000002C FF15[00000000]                      call [fread]
    49 00000032 83C410                              add esp,4*4
    50                                              
    51 00000035 0105[0F000000]                      add [characters_read],eax
    52 0000003B 83F800                              cmp eax,0
    53 0000003E 75DD                                jne Program
    54 00000040 8B0D[0F000000]                  mov ecx,[characters_read]
    55 00000046 BE[13000000]                    mov esi,text
    56                                          While_loop:
    57 0000004B 51                                  push ecx
    58 0000004C B90B000000                          mov ecx,char_start
    59 00000051 AC                                  lodsb 
    60 00000052 BF[77000000]                        mov edi,search_characters
    61                                              Check:
    62 00000057 AE                                      scasb
    63 00000058 7509                                    jne Not_this_vowel
    64 0000005A 8305[82000000]01                        add dword [nr_of_vowels],1
    65 00000061 EB02                                    jmp Found_a_vowel
    66                                                  Not_this_vowel:
    67 00000063 E2F2                                    loop Check
    68                                              Found_a_vowel:
    69 00000065 59                                  pop ecx
    70 00000066 E2E3                                loop While_loop
    71                                          Final:
    72 00000068 FF35[0B000000]                  push dword [file_descriptor]
    73 0000006E FF15[00000000]                  call [fclose]
    74 00000074 83C404                          add esp,4
    75                                          
    76 00000077 FF35[82000000]                  push dword [nr_of_vowels]
    77 0000007D 68[86000000]                    push dword write_format
    78 00000082 FF15[00000000]                  call [printf]
    79 00000088 83C408                          add esp,4*2
    80                                      
    81                                          ; exit(0)
    82 0000008B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    83 0000008D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
