     1                                  ;A file name is given (defined in the data segment). Create a file with the given name, then read numbers from the keyboard and write those numbers in the file, until the value '0' is read from the keyboard.
     2                                  bits 32 ; assembling for the 32 bits architecture
     3                                  
     4                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     5                                  global start        
     6                                  
     7                                  ; declare external functions needed by our program
     8                                  extern exit,fopen,fclose,fprintf,scanf               ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                  import fopen msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                  import fclose msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                  import fprintf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    13                                  import scanf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    14                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18 00000000 66696C652E74787400          file_name db "file.txt",0
    19 00000009 256400                      read_format db "%d",0
    20 0000000C 00000000                    file_descriptor dd 0
    21 00000010 7700                        write_mode db "w",0
    22 00000012 25640A00                    write_format db "%d",0ah,0
    23 00000016 00000000                    a dd 0
    24                                  
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28 00000000 68[10000000]                    push dword write_mode
    29 00000005 68[00000000]                    push dword file_name
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp,4*2
    32                                          
    33 00000013 A3[0C000000]                    mov [file_descriptor],eax
    34 00000018 83F800                          cmp eax,0
    35 0000001B 7438                            je Gata
    36                                          Reading_loop:
    37 0000001D 68[16000000]                        push dword a
    38 00000022 68[09000000]                        push dword read_format
    39 00000027 FF15[00000000]                      call [scanf]
    40 0000002D 83C408                              add esp,4*2
    41                                              
    42 00000030 833D[16000000]00                    cmp [a],dword 0
    43 00000037 741C                                je Gata
    44                                              ; add separation for bigger numbers
    45 00000039 FF35[16000000]                      push dword [a]
    46 0000003F 68[12000000]                        push dword write_format
    47 00000044 FF35[0C000000]                      push dword [file_descriptor]
    48 0000004A FF15[00000000]                      call [fprintf]
    49 00000050 83C40C                              add esp,4*3
    50 00000053 EBC8                                jmp Reading_loop
    51                                          Gata:
    52                                          
    53 00000055 FF35[0C000000]                  push dword [file_descriptor]
    54 0000005B FF15[00000000]                  call [fclose]    ; closing the file
    55 00000061 83C404                          add esp, 4
    56                                      
    57                                          ; exit(0)
    58 00000064 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    59 00000066 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
