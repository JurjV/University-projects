     1                                  ;Read two numbers a and b (in base 10) from the keyboard and calculate their product. This value will be stored in a variable called "result" (defined in the data segment).
     2                                  bits 32 
     3                                  
     4                                  
     5                                  global start        
     6                                  
     7                                  
     8                                  extern exit,printf,scanf               
     9                                  import exit msvcrt.dll    
    10                                  import printf msvcrt.dll    
    11                                  import scanf msvcrt.dll    
    12                                      
    13                                  
    14                                  
    15                                  segment data use32 class=data
    16 00000000 00000000                    a dd 0
    17 00000004 00000000                    b dd 0
    18 00000008 00000000                    result dd 0
    19 0000000C 613D00                      read_message_a db "a=",0
    20 0000000F 623D00                      read_message_b db "b=",0
    21 00000012 256400                      read_format db "%d",0
    22 00000015 25642A25643D256400          result_format db "%d*%d=%d",0
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27 00000000 68[0C000000]                    push dword read_message_a
    28 00000005 FF15[00000000]                  call [printf]
    29 0000000B 83C404                          add esp,4
    30                                          
    31 0000000E 68[00000000]                    push dword a
    32 00000013 68[12000000]                    push dword read_format
    33 00000018 FF15[00000000]                  call [scanf]
    34 0000001E 83C408                          add esp,8
    35                                          
    36 00000021 68[0F000000]                    push dword read_message_b
    37 00000026 FF15[00000000]                  call [printf]
    38 0000002C 83C404                          add esp,4
    39                                          
    40 0000002F 68[04000000]                    push dword b
    41 00000034 68[12000000]                    push dword read_format
    42 00000039 FF15[00000000]                  call [scanf]
    43 0000003F 83C408                          add esp,8
    44                                          
    45 00000042 A1[00000000]                    mov eax,[a]
    46 00000047 8B1D[04000000]                  mov ebx,[b]
    47 0000004D F7E3                            mul ebx
    48 0000004F A3[08000000]                    mov [result],eax
    49                                          
    50 00000054 FF35[08000000]                  push dword [result]
    51 0000005A FF35[04000000]                  push dword [b]
    52 00000060 FF35[00000000]                  push dword [a]
    53 00000066 68[15000000]                    push result_format
    54 0000006B FF15[00000000]                  call [printf]
    55 00000071 83C410                          add esp,4*4
    56                                      
    57                                          
    58 00000074 6A00                            push    dword 0      
    59 00000076 FF15[00000000]                  call    [exit]       
